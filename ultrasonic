from locorobo import LocoRobo
from locorobo import MotorDirection
from locorobo import Data
from locorobo import WaitType
from locorobo import Song
from locorobo import Note

def get_robot(robots, name):
    robot = None

    # Search through robots found during the scan for
    # the one we want
    for r in robots.values():
        if r.name == name:
            robot = r

            # We found the robot, so stop the for loop
            break

    # If we did not find the robot during the scan, stop the program
    if not robot:
        raise Exception('Could not find robot with specified name')

    return robot


def main():
    # Tell LocoRobo what serial port to use
    LocoRobo.setup("/dev/tty.usbmodem1")
    
    # Scan for robots
    robots = LocoRobo.scan(2000)

    # Use get_robots to find robot with name lr 00:07 in the scan result
    robot = get_robot(robots, "lr 44:69")

    robot.connect()
    robot.activate_motors()
    robot.enable_sensor(Data.ULTRASONIC, True)
    robot.enable_sensor(Data.ACCELEROMETER, True)

    LocoRobo.wait(0.2)
    
    distance = robot.get_sensor_value(Data.ULTRASONIC)
    acc_data = robot.get_sensor_value(Data.ACCELEROMETER)
    print("X Axis (g):", acc_data['x'])
    print("Y Axis (g):", acc_data['y'])
    print("Z Axis (g):", acc_data['z'])
    
    print(distance, "cm")
    
    LocoRobo.wait(3)

    robot.deactivate_motors()
    robot.disconnect()

# If we are on the main thread, run the program
if __name__ == "__main__":

    try:
        main()
    except:
        LocoRobo.stop()
        raise

    LocoRobo.stop()

    # For compatibility with webapp's python, we can't use finally.
    # If you are using local python, you can do the following
    #
    # try:
    #     main()
    # finally:
    #     LocoRobo.stop()
